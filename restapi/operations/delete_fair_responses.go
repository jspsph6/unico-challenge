// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"unico-challenge/models"
)

// DeleteFairOKCode is the HTTP code returned for type DeleteFairOK
const DeleteFairOKCode int = 200

/*DeleteFairOK Successful operation

swagger:response deleteFairOK
*/
type DeleteFairOK struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewDeleteFairOK creates DeleteFairOK with default headers values
func NewDeleteFairOK() *DeleteFairOK {

	return &DeleteFairOK{}
}

// WithPayload adds the payload to the delete fair o k response
func (o *DeleteFairOK) WithPayload(payload *models.Response) *DeleteFairOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete fair o k response
func (o *DeleteFairOK) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFairOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteFairBadRequestCode is the HTTP code returned for type DeleteFairBadRequest
const DeleteFairBadRequestCode int = 400

/*DeleteFairBadRequest One or more fields is invalid

swagger:response deleteFairBadRequest
*/
type DeleteFairBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Response `json:"body,omitempty"`
}

// NewDeleteFairBadRequest creates DeleteFairBadRequest with default headers values
func NewDeleteFairBadRequest() *DeleteFairBadRequest {

	return &DeleteFairBadRequest{}
}

// WithPayload adds the payload to the delete fair bad request response
func (o *DeleteFairBadRequest) WithPayload(payload *models.Response) *DeleteFairBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete fair bad request response
func (o *DeleteFairBadRequest) SetPayload(payload *models.Response) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteFairBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
